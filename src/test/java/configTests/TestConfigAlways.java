/*
Copyright 2021 David Richardson, a regular GanttProject User

This file is part of GanttProjectAutomator, a utility conceived from
years of project management experience to make task status communication
just a little bit easier.

It works specifically with files generated by GanttProject, an 
open source project management tool.

GanttProjectAutomator is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

GanttProjectAutomator is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

See <http://www.gnu.org/licenses/>.
*/
package configTests;

import org.junit.jupiter.api.Test;
import org.richardson.david.config.UserConfig;
import controlTests.TestCommandLine;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import org.junit.jupiter.api.Assertions;

public class TestConfigAlways extends TestCommandLine {

	private static SimpleDateFormat DATE_FORMAT = new SimpleDateFormat("dd/MM/yyyy");

	@Test
	void testDoRetryMonthAlways() {
		UserConfig config = getUserConfig(true);
		Date startDate = getDate("01/02/2021");
		Date endDate = getDate("28/02/2021");

		//		for (int i = 1; i <= 28; i++)
		//		{
		//			Boolean doNotifyBoolean = config.getNotify().doNotification(startDate, endDate, getDate(i + "/02/2021"));
		//			System.out.println("Date is " + i + "/02/2021" + " - result is: " + doNotifyBoolean );
		//		}

		System.out.println("Config getNotifications() is: " + config.getNotify().getNotifications());
		
		// Hit Start
		Assertions.assertFalse(config.getNotify().doNotification(startDate, endDate, getDate("31/01/2021")));
		Assertions.assertTrue(config.getNotify().doNotification(startDate, endDate, getDate("01/02/2021")));
		Assertions.assertTrue(config.getNotify().doNotification(startDate, endDate, getDate("02/02/2021")));
		Assertions.assertTrue(config.getNotify().doNotification(startDate, endDate, getDate("03/02/2021")));
		Assertions.assertTrue(config.getNotify().doNotification(startDate, endDate, getDate("04/02/2021")));
		Assertions.assertTrue(config.getNotify().doNotification(startDate, endDate, getDate("05/02/2021")));
		Assertions.assertTrue(config.getNotify().doNotification(startDate, endDate, getDate("06/02/2021")));
		Assertions.assertTrue(config.getNotify().doNotification(startDate, endDate, getDate("07/02/2021")));
		Assertions.assertTrue(config.getNotify().doNotification(startDate, endDate, getDate("08/02/2021")));
		Assertions.assertTrue(config.getNotify().doNotification(startDate, endDate, getDate("09/02/2021")));

		// Hit Quarter
		Assertions.assertTrue(config.getNotify().doNotification(startDate, endDate, getDate("07/02/2021")));
		Assertions.assertTrue(config.getNotify().doNotification(startDate, endDate, getDate("08/02/2021")));
		Assertions.assertTrue(config.getNotify().doNotification(startDate, endDate, getDate("09/02/2021")));

		// Hit Half
		Assertions.assertTrue(config.getNotify().doNotification(startDate, endDate, getDate("14/02/2021")));
		Assertions.assertTrue(config.getNotify().doNotification(startDate, endDate, getDate("15/02/2021")));
		Assertions.assertTrue(config.getNotify().doNotification(startDate, endDate, getDate("16/02/2021")));

		// Hit Three Quarters
		Assertions.assertTrue(config.getNotify().doNotification(startDate, endDate, getDate("21/02/2021")));
		Assertions.assertTrue(config.getNotify().doNotification(startDate, endDate, getDate("22/02/2021")));
		Assertions.assertTrue(config.getNotify().doNotification(startDate, endDate, getDate("23/02/2021")));

		// Hit End
		Assertions.assertTrue(config.getNotify().doNotification(startDate, endDate, getDate("27/02/2021")));
		Assertions.assertTrue(config.getNotify().doNotification(startDate, endDate, getDate("28/02/2021")));
	//	Assertions.assertFalse(config.getNotify().doNotification(startDate, endDate, getDate("01/03/2021")));
		// Changed so "Always" will notify once start has passed even if end has passed too :-)
		Assertions.assertTrue(config.getNotify().doNotification(startDate, endDate, getDate("01/03/2021")));

	}

	private Date getDate(String string) {
		Date result = null;
		try {
			result = DATE_FORMAT.parse(string);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return result;
	}

	private UserConfig getUserConfig(Boolean alwaysNotify)
	{
		resetForTests();
		if (alwaysNotify) initializeConfig(TestCommandLine.getTEMP_ALWAYS_NOTIFY_CONFIG_FILE());
		else initializeConfig();
		Assertions.assertTrue(UserConfig.getInstance() != null);
		return UserConfig.getInstance();
	}

}
