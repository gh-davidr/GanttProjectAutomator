/*
Copyright 2021 David Richardson, a regular GanttProject User

This file is part of GanttProjectAutomator, a utility conceived from
years of project management experience to make task status communication
just a little bit easier.

It works specifically with files generated by GanttProject, an 
open source project management tool.

GanttProjectAutomator is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

GanttProjectAutomator is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

See <http://www.gnu.org/licenses/>.
*/
package org.richardson.david.model;

import java.util.ArrayList;


import org.richardson.david.entity.gantt.Allocation;
import org.richardson.david.entity.gantt.Resource;
import org.richardson.david.entity.gantt.Task;

import lombok.Getter;
import lombok.NonNull;
import lombok.RequiredArgsConstructor;

@Getter
@RequiredArgsConstructor
public class EnrichedResource {
	
	@NonNull private Resource resource;
	
	@Getter(lazy=true) private final ArrayList<Task> tasks = initTasks();	

	public String summariseResource()
	{
		StringBuilder stringBuilder = new StringBuilder();

		stringBuilder.append(""
				+ "Id: " + getResource().getId()
				+ " Name: " + getResource().getName()
				+ " Email: " + getResource().getContacts()
				+ " End: " + getResource().getPhone()
				);

		return stringBuilder.toString();
	}
	
	private ArrayList<Task> initTasks()
	{
		ArrayList<Task> resultArrayList = new ArrayList<Task>();

		// Find all the resources for this task from the Repository
		ArrayList<Allocation> allocations = Repository.getInstance().getAllocationResourceIdHashMap().get(resource.getId());
		if (allocations != null)
		{
			allocations.forEach(a -> 
			{
				String taskIdString = a.getTaskId();
				EnrichedTask enrichedTask = Repository.getInstance().getEnrichedTaskHashMap().get(taskIdString);
				resultArrayList.add(enrichedTask.getTask());
			});
		}
		return resultArrayList;
	}

}
