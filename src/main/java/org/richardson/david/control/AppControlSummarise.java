/*
Copyright 2021 David Richardson, a regular GanttProject User

This file is part of GanttProjectAutomator, a utility conceived from
years of project management experience to make task status communication
just a little bit easier.

It works specifically with files generated by GanttProject, an 
open source project management tool.

GanttProjectAutomator is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

GanttProjectAutomator is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

See <http://www.gnu.org/licenses/>.
*/
package org.richardson.david.control;

import java.util.ArrayList;

import org.richardson.david.entity.email.EmailMessageSummary;
import org.richardson.david.entity.email.ReadEmailSession;
import org.richardson.david.model.EnrichedTask;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import lombok.NonNull;
import lombok.RequiredArgsConstructor;

@RequiredArgsConstructor
public class AppControlSummarise extends AppControlBase {
	
	private static Logger LOGGER = LoggerFactory.getLogger(AppControlSummarise.class);
	
	@NonNull protected Boolean reportOnlyBoolean;

	public void doSummarise()
	{		
		ReadEmailSession accountEmails = new ReadEmailSession("");

		EmailMessageSummary emailMessageSummary = new EmailMessageSummary(accountEmails);
		if (reportOnlyBoolean)
		{	
			ArrayList<EnrichedTask> notStartedEnrichedTasks = emailMessageSummary.getNotStartedEnrichedTasks();
			ArrayList<EnrichedTask> updatedEnrichedTasks = emailMessageSummary.getUpdatedEnrichedTasks();
			ArrayList<EnrichedTask> upcomingEnrichedTasks = emailMessageSummary.getUpcomingEnrichedTasks();

			notStartedEnrichedTasks.forEach(t -> LOGGER.info("  " + getRunMode() + "Task not yet started: " + t.summariseTask()));
			updatedEnrichedTasks.forEach(t -> LOGGER.info("  " + getRunMode() + "Task in progress: " + t.summariseTask()));
			upcomingEnrichedTasks.forEach(t -> LOGGER.info("  " + getRunMode() + "Upcoming task due to start: " + t.summariseTask()));
		}
		else 
		{
			emailMessageSummary.sendSummaryEmail();
		}
		LOGGER.info(getRunMode() + AppVersion.getAppNameString() + "-" + AppVersion.getVersionString());
		LOGGER.info(getRunMode() + "Summary complete." + (reportOnlyBoolean ? "  Report Only Mode active, so no summary sent" : ""));
	}

}
