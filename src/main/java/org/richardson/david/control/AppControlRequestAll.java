/*
Copyright 2021 David Richardson, a regular GanttProject User

This file is part of GanttProjectAutomator, a utility conceived from
years of project management experience to make task status communication
just a little bit easier.

It works specifically with files generated by GanttProject, an 
open source project management tool.

GanttProjectAutomator is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

GanttProjectAutomator is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

See <http://www.gnu.org/licenses/>.
*/
package org.richardson.david.control;

import org.richardson.david.entity.email.EmailMessageInboxPlaceholderAll;
import org.richardson.david.load.DataSaver;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import lombok.Getter;
import lombok.NonNull;
import lombok.RequiredArgsConstructor;

@Getter
@RequiredArgsConstructor
public class AppControlRequestAll extends AppControlBase {

	private static Logger LOGGER = LoggerFactory.getLogger(AppControlRequestAll.class);

	@NonNull private final DataSaver  dataSaver;
	@NonNull private final Boolean    reportOnlyBoolean;

	public void doAllResponses()
	{
		int reminders = new AppControlRequestRemind(reportOnlyBoolean).doRemind(false, null);
		int updates   = new AppControlRequestUpdate(dataSaver, reportOnlyBoolean).doUpdate(false, null);
		int helps     = new AppControlRequestHelp(reportOnlyBoolean).doHelp(false, null);
		int notifies  = new AppControlRequestNotify(reportOnlyBoolean).doNotifyAlways(false, null);
		int summaries = new AppControlRequestSummarise(reportOnlyBoolean).doSummarise(false, null);
		
		if (reminders + updates + helps + notifies > 0)
		{
			LOGGER.info(getRunMode() + AppVersion.getAppNameString() + "-" + AppVersion.getVersionString());
			
			// Send a single inbox placeholder email out
			EmailMessageInboxPlaceholderAll inboxMonitorPlaceholderEmail = new EmailMessageInboxPlaceholderAll();
			inboxMonitorPlaceholderEmail.sendMonitorPlaceholderEmail();	
		}

		if (reportOnlyBoolean)
		{
			LOGGER.info(getRunMode() 
					+ "All email Responses handled.  Report Only Mode active, so no updates actually performed."
					+ " Notifies(" + notifies + "), Reminders(" + reminders + "), Updates(" + updates + "), Summaries(" + summaries + ") & Helps(" + helps + ")"
					);
		}
		else 
		{
			LOGGER.info(getRunMode() 
					+ "All email Responses handled.  Email responses handled/sent as follows:"
					+ " Notifies(" + notifies + "), Reminders(" + reminders + "), Updates(" + updates + "), Summaries(" + summaries + ") & Helps(" + helps + ")"
					);
		}

	}
}
