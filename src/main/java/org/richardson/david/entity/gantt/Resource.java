/*
Copyright 2021 David Richardson, a regular GanttProject User

This file is part of GanttProjectAutomator, a utility conceived from
years of project management experience to make task status communication
just a little bit easier.

It works specifically with files generated by GanttProject, an 
open source project management tool.

GanttProjectAutomator is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

GanttProjectAutomator is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

See <http://www.gnu.org/licenses/>.
*/
package org.richardson.david.entity.gantt;

import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlRootElement;
import lombok.Data;
import lombok.ToString;

@Data
@ToString
@XmlRootElement(name = "resource")
@XmlAccessorType(XmlAccessType.FIELD) 
public class Resource {

	@XmlAttribute private String id;
	@XmlAttribute private String name;
	@XmlAttribute private String function;
	@XmlAttribute private String contacts;
	@XmlAttribute private String phone;

//	// ----------------------------------------
//	// Everything below ...
//	// Due to go - moved to EnrichedResource
//	@Getter(lazy=true) private final ArrayList<Task> tasks = initTasks();	
//
//	private ArrayList<Task> initTasks()
//	{
//		ArrayList<Task> resultArrayList = new ArrayList<Task>();
//
//		// Find all the resources for this task from the Repository
//		ArrayList<Allocation> allocations = Repository.getInstance().getAllocationResourceIdHashMap().get(id);
//		if (allocations != null)
//		{
//			allocations.forEach(a -> 
//			{
//				String taskIdString = a.getTaskId();
//				resultArrayList.add(Repository.getInstance().getTaskHashMap().get(taskIdString));
//			});
//		}
//		return resultArrayList;
//	}
}
