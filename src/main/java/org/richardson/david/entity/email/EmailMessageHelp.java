/*
Copyright 2021 David Richardson, a regular GanttProject User

This file is part of GanttProjectAutomator, a utility conceived from
years of project management experience to make task status communication
just a little bit easier.

It works specifically with files generated by GanttProject, an 
open source project management tool.

GanttProjectAutomator is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

GanttProjectAutomator is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

See <http://www.gnu.org/licenses/>.
*/
package org.richardson.david.entity.email;
import org.richardson.david.config.UserConfig;
import org.richardson.david.model.Repository;
import lombok.Getter;
import lombok.NonNull;
import lombok.RequiredArgsConstructor;

// Sends email notifications for a particular task

@Getter
@RequiredArgsConstructor
public class EmailMessageHelp extends EmailMessageBase
{
	@NonNull private String           recipientEmailString;

	public void sendHelpEmail()
	{
		sendEmail(recipientEmailString, 
				"Automated Help for Project: '" + Repository.getInstance().getProject().getName() + "'",
				getBodyHTML());
	}

	private String getBodyHTML()
	{
		StringBuilder sBuilder = new StringBuilder();

		sBuilder.append(
				"<html xmlns:v=\"urn:schemas-microsoft-com:vml\"\r\n"
						+ "xmlns:o=\"urn:schemas-microsoft-com:office:office\"\r\n"
						+ "xmlns:w=\"urn:schemas-microsoft-com:office:word\"\r\n"
						+ "xmlns:x=\"urn:schemas-microsoft-com:office:excel\"\r\n"
						+ "xmlns:m=\"http://schemas.microsoft.com/office/2004/12/omml\"\r\n"
						+ "xmlns=\"http://www.w3.org/TR/REC-html40\">\r\n"
						+ "\r\n"
						+ "<head>\r\n"
						+ "<meta http-equiv=Content-Type content=\"text/html; charset=unicode\">\r\n"
						+ "<meta name=ProgId content=Word.Document>\r\n"
						+ "<meta name=Generator content=\"Microsoft Word 15\">\r\n"
						+ "<meta name=Originator content=\"Microsoft Word 15\">\r\n"
						+ "\r\n"
						+ "</style>\r\n"
						+ "\r\n"
						+ "</head>\r\n"
						+ "\r\n"
						+ "<body lang=EN-GB link=blue vlink=purple style='tab-interval:36.0pt;word-wrap:\r\n"
						+ "break-word'>\r\n"
						+ "\r\n"
						+ "<div class=WordSection1>\r\n"
						+ "\r\n"
						+ "<p class=MsoNormal>Hello!<o:p></o:p></p>\r\n"
						+ "\r\n"
						+ "<p class=MsoNormal><o:p>&nbsp;</o:p></p>\r\n"
						+ "\r\n"
						+ "<p class=MsoNormal>This email summarises the automated capabilities for the project " 
						+ "'" + Repository.getInstance().getProject().getName() + "'.<o:p></o:p></p>\r\n"
						+ "<p class=MsoNormal>It also provides visibility of the configuration file used to drive behaviours supported in this automation.<o:p></o:p></p>\r\n"

						+ getBulletList()


						//		+ getHelpTable()
						+ getRequestsHelpTable()
						+ getResponsesHelpTable()
						+ getNotificationsHelpTable()
						+ getRepliesHelpTable()
						+ getMonitorTagsHelpTable()

						+ getConfigurationDetails()

						+ "<o:p></o:p></p>\r\n"
						+ "\r\n"
						+ "<p class=MsoNormal><o:p>&nbsp;</o:p></p>\r\n"
						+ "\r\n"
				);



		sBuilder.append(getEmailSignature());


		return sBuilder.toString();
	}

	private String getBulletList()
	{
		StringBuilder sBuilder = new StringBuilder();

		sBuilder.append(""
				+ "<p class=MsoNormal>"
				+ "Automation is via email.  Emails fall into different categories and can either be either from a user or the system as explained below:<br>"
				+ "<ul>"
				+ "<li><b>Request</b>      - an email from a user sent to the monitored account requesting some information back</li>"

				+ "<ul>"
				+ "<li><b>Request Help      -</b> requests a help reply email</li>"
				+ "<li><b>Request Notify    -</b> requests all started tasks with 0% progress be notified</li>"
				+ "<li><b>Request Remind    -</b> requests a personalised summary of tasks for sender</li>"
				+ "<li><b>Request Summarise -</b> requests the full project summary be sent to the PM</li>"
				+ "</ul>"

				+ "<li>Response     - an automated email from the monitored account in response to a prior request</li>"

				+ "<ul>"
				+ "<li><b>Response for Help      -</b> response for a help request email</li>"
				+ "<li><b>Response for Notify    -</b> Same as Notification of Tasks</li>"
				+ "<li><b>Response for Remind    -</b> response is a personalised summary of tasks for sender</li>"
				+ "<li><b>Response for Summarise -</b> Same as Notification of Summary</li>"
				+ "</ul>"

				+ "<li><b>Notification -</b> an unsolicited automated email from the monitored account notifying project state</li>"
				+ "<ul>"
				+ "<li><b>Notification of Task    -</b> Details of a task that has zero progress and a start date 'today' or in the past</li>"
				+ "<li><b>Notification of Summary -</b> List of tasks for a project that are:</li>"
				+ "<ul>"
				+ "<li>In Progress  - Start date in past and completion < 100%</li>"
				+ "<li>Due to Start - Start falls in next " +  UserConfig.getInstance().getSummarise().getSummaryFutureDays() + " days</li>"
				+ "</ul>"
				+ "</ul>"

				+ "<li><b>Reply        -</b> an email reply from a user to a prioir notification sent to the monitored account to update project state</li>"
				+ "<li><b>Monitor Tag  -</b> an automated email from and to the monitored account to place mark processing.</li>"
				+ "</ul>"
				+ "<o:p></o:p></p>\r\n"
				);


		return sBuilder.toString();
	}


//	private String getHelpTable()
//	{
//		StringBuilder sBuilder = new StringBuilder();
//
//		sBuilder.append(""
//				+ "<table class=MsoTable15Grid4Accent1 border=1 cellspacing=0 cellpadding=0\r\n"
//				+ " style='margin-left:30.2pt;border-collapse:collapse;border:none;mso-border-alt:\r\n"
//				+ " solid #95B3D7 .5pt;mso-border-themecolor:accent1;mso-border-themetint:153;\r\n"
//				+ " mso-yfti-tbllook:1184;mso-padding-alt:0cm 5.4pt 0cm 5.4pt'>\r\n"
//
//				+ getHelpTableHeaderRowHTML()
//				+ getHelpTableRowsHTML()
//
//				+ "</table>\r\n"
//				);
//
//
//		return sBuilder.toString();
//	}

	private String getRequestsHelpTable()
	{
		StringBuilder sBuilder = new StringBuilder();

		sBuilder.append(""

				+ "<p class=MsoNormal>"
				+ "The table below shows more details for each of the REQUESTS senders can make:<br>"
				+ "<o:p></o:p></p>\r\n"

				+ "<table class=MsoTable15Grid4Accent1 border=1 cellspacing=0 cellpadding=0\r\n"
				+ " style='margin-left:30.2pt;border-collapse:collapse;border:none;mso-border-alt:\r\n"
				+ " solid #95B3D7 .5pt;mso-border-themecolor:accent1;mso-border-themetint:153;\r\n"
				+ " mso-yfti-tbllook:1184;mso-padding-alt:0cm 5.4pt 0cm 5.4pt'>\r\n"

				+ getHelpTableHeaderRowHTML()

				+ getHelpTableRowHTML(
						"Request : Help"
						,

						"Email sent to monitored account requesting a breakdown of the automation capabilities"
						,

						"An email with a single word in subject 'help' (case insensitive)<br><br>(The email body can contain anything)"
								+ "The system only allows emails from assignees or the PM to request help.  Non-recognized senders cause an alert to be sent to the PM"
								,

								"The Automated System replies with the 'Notification : Help' message.<br>  "
										+ "The system also sends the 'sending' email address a placeholder marker email.  "
										+ "In this way it knows not to process the same help request more than once."
						)

				+ getHelpTableRowHTML(
						"Request : Notify"
						,

						"Email sent to monitored account requesting a repeat broadcast of Task Notification to each assignee for all started tasks with zero progress"
						,

						"An email with a single word in subject 'notify' (case insensitive)<br><br>(The email body can contain anything).  "
								+ "The system only allows emails from assignees or the PM to perform a notify.  Non-recognized senders cause an alert to be sent to the PM"
								,

								"The Automated System replies with the 'Notification : Help' message.<br>  "
										+ "The system also sends the 'sending' email address a placeholder marker email.  "
										+ "In this way it knows not to process the same help notify more than once."
						)


				+ getHelpTableRowHTML(
						"Request : Reminder"
						,

						"Email sent to monitored account requesting a project summary for the sender.  Response is in same format as Project Summary"
						,

						"Two key tags at the end of the email are key for automatically handling a Request Reminder:"

										+ "<ul>"
										+ "<li>{Project " + Repository.getInstance().getProject().getName() + "}"
										+ "<li>{Reserved Token for " + Repository.getInstance().getProject().getName() + "}"
										+ "</ul>"

										+ "These two tags must be included in reminder request<br>"
										+ "This ensures a reminder is sent for the correct project"
										,

										"Generates a 'Response : Project Reminder' email summary for the sender"
						)

				+ getHelpTableRowHTML(
						"Request : Summarise"
						,

						"Email sent to monitored account requesting a Project Summary be sent to the configured PM"
						,

						"An email with a single word in subject 'summarise' (case insensitive)<br><br>(The email body can contain anything).  "
								+ "The system only allows emails from assignees or the PM to perform a notify.  Non-recognized senders cause an alert to be sent to the PM"
								,

								"The Automated System replies with the 'Notification : Project Summary' message.<br>  "
										+ "The system also sends the 'sending' email address a placeholder marker email.  "
										+ "In this way it knows not to process the same summarise request more than once."
						)

				+ "</table>\r\n"
				);


		return sBuilder.toString();
	}

	private String getResponsesHelpTable()
	{
		StringBuilder sBuilder = new StringBuilder();

		sBuilder.append(""
				
				+ "<p class=MsoNormal>"
				+ "The table below shows more details for each of the system RESPONSES to each of the REQUESTS:<br>"
				+ "<o:p></o:p></p>\r\n"

				+ "<table class=MsoTable15Grid4Accent1 border=1 cellspacing=0 cellpadding=0\r\n"
				+ " style='margin-left:30.2pt;border-collapse:collapse;border:none;mso-border-alt:\r\n"
				+ " solid #95B3D7 .5pt;mso-border-themecolor:accent1;mso-border-themetint:153;\r\n"
				+ " mso-yfti-tbllook:1184;mso-padding-alt:0cm 5.4pt 0cm 5.4pt'>\r\n"

				+ getHelpTableHeaderRowHTML()

				+ getHelpTableRowHTML(
						"Response : Help"
						,

						"Automated email replied to sender with a breakdown of the automation capabilities"
						,

						"There is no key identifier for the Help response email.  Any reply to this email will be ignored"
						,

						"System sends the 'sending' email address a placeholder marker email.  In this way it knows not to process the same help request more than once."
						)


				+ getHelpTableRowHTML(
						"Response : Task Notify"
						,

						"Automated email sent out to all assigned resource with details of task that have started but have zero progress.<br>"
								+ "The body contains a table with details of the task (Name, progress, start, end etc)"
								,

								"Three key tags in the body at the end of the email are key for automatically handling reply:"
										+ "<ul>"
										+ "<li>{Project " + Repository.getInstance().getProject().getName() + "}"
										+ "<li>{Task Id (id number of task)}"
										+ "<li>{Reserved Token for " + Repository.getInstance().getProject().getName() + "}"
										+ "</ul>"
										+ "These three tags must be included in any reply<br>"
										+ "This ensures that any progress update is applied to the correct project and task"
										,

										"This is an automated email that gets sent to each resource<b>"
												+ "System updates progress based on reply to this email"
						)


				+ getHelpTableRowHTML(
						"Response : Project Reminder"
						,

						"Automated email generated in response to the 'Request : Reminder' email from a resource." 
								+ "<br>Like the 'Notification : Project Summary', it also lists tasks in progress, underway and due to start"
								+ "<br>but only those associated with the sender of the reminder request"
								,

								"There are no particular key identifiers for this message<br>Any replies will not be handled automatically"
								,

								"Any replies will not be handled automatically"
						)

				+ getHelpTableRowHTML(
						"Response : Project Summary"
						,

						"Automated email generated in response to request for summary that's sent to the Project Manager (" 
								+ UserConfig.getInstance().getSummarise().getProjectManager()
								+ ")<br>which lists tasks in progress, underway, due to start and that are completed"
								,

								"There are no particular key identifiers for this message<br>Any replies will not be handled automatically"
								,

								"Any replies will not be handled automatically"
						)


				+ "</table>\r\n"
				);

		return sBuilder.toString();
	}

	private String getNotificationsHelpTable()
	{
		StringBuilder sBuilder = new StringBuilder();

		sBuilder.append(""

				+ "<p class=MsoNormal>"
				+ "The table below shows more details for each of the system NOTIFICATIONS that can be sent:<br>"
				+ "<o:p></o:p></p>\r\n"
							
				+ "<table class=MsoTable15Grid4Accent1 border=1 cellspacing=0 cellpadding=0\r\n"
				+ " style='margin-left:30.2pt;border-collapse:collapse;border:none;mso-border-alt:\r\n"
				+ " solid #95B3D7 .5pt;mso-border-themecolor:accent1;mso-border-themetint:153;\r\n"
				+ " mso-yfti-tbllook:1184;mso-padding-alt:0cm 5.4pt 0cm 5.4pt'>\r\n"

				+ getHelpTableHeaderRowHTML()


				+ getHelpTableRowHTML(
						"Notification : Task Start"
						,

						"Automated email generated to assigned resource with details of task that starts that very day.<br>"
								+ "The body contains a table with details of the task (Name, progress, start, end etc)"
								,

								"Three key tags in the body at the end of the email are key for automatically handling reply:"
										+ "<ul>"
										+ "<li>{Project " + Repository.getInstance().getProject().getName() + "}"
										+ "<li>{Task Id (id number of task)}"
										+ "<li>{Reserved Token for " + Repository.getInstance().getProject().getName() + "}"
										+ "</ul>"
										+ "These three tags must be included in any reply<br>"
										+ "This ensures that any progress update is applied to the correct project and task"
										,

										"This is an automated email that gets sent to each resource<b>"
												+ "System updates progress based on reply to this email"
						)

				+ getHelpTableRowHTML(
						"Notification : Follow Up Task"
						,

						"Automated email generated to assigned resource with details of task that have already started but there's no progress"
								+ "Just like 'Notification : Task Start', the body contains a table with details of the task<br>(Name, progress, start, end etc)<br>"
								+ "For this project, follow Up notification is sent at following configured intervals if progress is 0<br>"
								+ UserConfig.getInstance().getNotify().getNotifications()
								,

								"Exactly the same as 'Notification : Task Start' above"
								,

								"Exactly the same as 'Notification : Task Start' above"
						)

				+ getHelpTableRowHTML(
						"Notification : Task Update Acknowledgement"
						,

						"Automated email generated after handling a 'Reply : Task Update' message.<br>"
								+ "Note that the system sends the acknowledgement to the person who updated the task and also Cc's any other resource associated with the task too"
								,

								"Exactly the same as 'Notification : Task Start' above"
								,

								"There is no response"
						)


				+ getHelpTableRowHTML(
						"Notification : Project Summary"
						,

						"Automated email generated in response to request for summary that's sent to the Project Manager (" 
								+ UserConfig.getInstance().getSummarise().getProjectManager()
								+ ")<br>which lists tasks in progress, underway, due to start and that are completed"
								,

								"There are no particular key identifiers for this message<br>Any replies will not be handled automatically"
								,

								"Any replies will not be handled automatically"
						)


				+ "</table>\r\n"
				);


		return sBuilder.toString();
	}

	private String getRepliesHelpTable()
	{
		StringBuilder sBuilder = new StringBuilder();

		sBuilder.append(""
				
				+ "<p class=MsoNormal>"
				+ "The table below shows more details for each of the system REPLIES to NOTIFICATIONS that can be sent:<br>"
				+ "<o:p></o:p></p>\r\n"

				
				+ "<table class=MsoTable15Grid4Accent1 border=1 cellspacing=0 cellpadding=0\r\n"
				+ " style='margin-left:30.2pt;border-collapse:collapse;border:none;mso-border-alt:\r\n"
				+ " solid #95B3D7 .5pt;mso-border-themecolor:accent1;mso-border-themetint:153;\r\n"
				+ " mso-yfti-tbllook:1184;mso-padding-alt:0cm 5.4pt 0cm 5.4pt'>\r\n"

				+ getHelpTableHeaderRowHTML()

				+ getHelpTableRowHTML(
						"Reply : Task Update"
						,

						"A user email in reply to either 'Notification : Task Start' or 'Notification : Follow Up Task' notification email." 
								+ "<br>The body of this email gets read and interpreted to understand what to set the completion to for the task."
								+ "<br>By simply replying to the task notification, the original notification text should (and MUST) be included in the reply."
								+ "<br>That ensures that the key signature gets included which can correctly identify the project and the task."
								,

								"Three key tags in at the end of the email are key for automatically handling reply:"
										+ "<ul>"
										+ "<li>{Project " + Repository.getInstance().getProject().getName() + "}"
										+ "<li>{Task Id (id number of task)}"
										+ "<li>{Reserved Token for " + Repository.getInstance().getProject().getName() + "}"
										+ "</ul>"
										+ "These three tags must be included in this reply<br>"
										+ "This ensures that any progress update is applied to the correct project and task"
										,

										"An Acknowledgement notification is sent in response to the reply"
						)

				+ "</table>\r\n"
				);


		return sBuilder.toString();
	}

	private String getMonitorTagsHelpTable()
	{
		StringBuilder sBuilder = new StringBuilder();

		sBuilder.append(""

				+ "<p class=MsoNormal>"
				+ "The table below shows more details for each of the system MONITOR TAGS that are used as placeholders in the monitoring account inbox:<br>"
				+ "<o:p></o:p></p>\r\n"

				
				+ "<table class=MsoTable15Grid4Accent1 border=1 cellspacing=0 cellpadding=0\r\n"
				+ " style='margin-left:30.2pt;border-collapse:collapse;border:none;mso-border-alt:\r\n"
				+ " solid #95B3D7 .5pt;mso-border-themecolor:accent1;mso-border-themetint:153;\r\n"
				+ " mso-yfti-tbllook:1184;mso-padding-alt:0cm 5.4pt 0cm 5.4pt'>\r\n"

				+ getHelpTableHeaderRowHTML()

				+ getMonitorTableRow("Help")
				+ getMonitorTableRow("Update")
				+ getMonitorTableRow("Remind")
				+ getMonitorTableRow("Notify")
				+ getMonitorTableRow("Summarise")

				+ "</table>\r\n"
				);


		return sBuilder.toString();
	}


	private String getConfigurationDetails() 
	{
		StringBuilder sBuilder = new StringBuilder();

		sBuilder.append(""
				+ "<p class=MsoNormal>"

				+ "The series of lists below summarise the configuration used by the process monitoring this project."
				+ "<o:p></o:p></p>\r\n"

				+ "<p class=MsoNormal>" + UserConfig.getInstance().toString() + "<o:p></o:p></p>\r\n"
				);

		return sBuilder.toString();
	}

	protected String getHelpTableHeaderRowHTML()
	{
		StringBuilder sBuilder = new StringBuilder();

		sBuilder.append(""
				+ " <tr style='mso-yfti-irow:-1;mso-yfti-firstrow:yes;mso-yfti-lastfirstrow:yes'>\r\n"

				//				+ "  <td width=125 style='width:93.5pt;border:solid #4F81BD 1.0pt;mso-border-themecolor:\r\n"
				+ "  <td width=125 style='width:7.0cm;border:solid #4F81BD 1.0pt;mso-border-themecolor:\r\n"
				+ "  accent1;border-right:none;mso-border-top-alt:solid #4F81BD .5pt;mso-border-top-themecolor:\r\n"
				+ "  accent1;mso-border-left-alt:solid #4F81BD .5pt;mso-border-left-themecolor:\r\n"
				+ "  accent1;mso-border-bottom-alt:solid #4F81BD .5pt;mso-border-bottom-themecolor:\r\n"
				+ "  accent1;background:#4F81BD;mso-background-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>\r\n"
				+ "  <p class=MsoNormal align=center style='mso-yfti-cnfc:5'><b><span style='color:white;\r\n"
				+ "  mso-themecolor:background1'>Message Type<o:p></o:p></span></b></p>\r\n"
				+ "  </td>\r\n"

				//				+ "  <td width=125 style='width:93.5pt;border-top:solid #4F81BD 1.0pt;mso-border-top-themecolor:\r\n"
				// + "  <td width=125 style='width:130pt;border-top:solid #4F81BD 1.0pt;mso-border-top-themecolor:\r\n"
				+ "  <td width=125 style='width:7.0cm;border-top:solid #4F81BD 1.0pt;mso-border-top-themecolor:\r\n"
				+ "  accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;mso-border-bottom-themecolor:\r\n"
				+ "  accent1;border-right:none;mso-border-top-alt:solid #4F81BD .5pt;mso-border-top-themecolor:\r\n"
				+ "  accent1;mso-border-bottom-alt:solid #4F81BD .5pt;mso-border-bottom-themecolor:\r\n"
				+ "  accent1;background:#4F81BD;mso-background-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>\r\n"
				+ "  <p class=MsoNormal style='mso-yfti-cnfc:1'><b><span style='color:white;\r\n"
				+ "  mso-themecolor:background1'>Description<o:p></o:p></span></b></p>\r\n"
				+ "  </td>\r\n"

				+ "  <td width=125 style='width:7.0cm;border-top:solid #4F81BD 1.0pt;mso-border-top-themecolor:\r\n"
				+ "  accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;mso-border-bottom-themecolor:\r\n"
				+ "  accent1;border-right:none;mso-border-top-alt:solid #4F81BD .5pt;mso-border-top-themecolor:\r\n"
				+ "  accent1;mso-border-bottom-alt:solid #4F81BD .5pt;mso-border-bottom-themecolor:\r\n"
				+ "  accent1;background:#4F81BD;mso-background-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>\r\n"
				+ "  <p class=MsoNormal align=center style='mso-yfti-cnfc:1'><b><span style='color:white;\r\n"
				+ "  mso-themecolor:background1'>Key Identifier<o:p></o:p></span></b></p>\r\n"
				+ "  </td>\r\n"

				//				+ "  <td width=125 style='width:93.5pt;border-top:solid #4F81BD 1.0pt;mso-border-top-themecolor:\r\n"
				+ "  <td width=125 style='width:7.0cm;border-top:solid #4F81BD 1.0pt;mso-border-top-themecolor:\r\n"
				+ "  accent1;border-left:none;border-bottom:solid #4F81BD 1.0pt;mso-border-bottom-themecolor:\r\n"
				+ "  accent1;border-right:none;mso-border-top-alt:solid #4F81BD .5pt;mso-border-top-themecolor:\r\n"
				+ "  accent1;mso-border-bottom-alt:solid #4F81BD .5pt;mso-border-bottom-themecolor:\r\n"
				+ "  accent1;background:#4F81BD;mso-background-themecolor:accent1;padding:0cm 5.4pt 0cm 5.4pt'>\r\n"
				+ "  <p class=MsoNormal align=center style='mso-yfti-cnfc:1'><b><span style='color:white;\r\n"
				+ "  mso-themecolor:background1'>Response (if any)<o:p></o:p></span></b></p>\r\n"
				+ "  </td>\r\n"

				+ " </tr>\r\n"

				);

		return sBuilder.toString();
	}

	protected String getHelpTableRowsHTML()
	{
		StringBuilder sBuilder = new StringBuilder();


		sBuilder.append(getHelpTableRowHTML(
				"Request : Help"
				,

				"Email sent to monitored account requesting a breakdown of the automation capabilities"
				,

				"An email with a single word in subject 'help' (case insensitive)<br><br>(The email body can contain anything)"
				,

				"The Automated System replies with the 'Notification : Help' message.<br>  The system also sends the 'sending' email address a placeholder marker email.  In this way it knows not to process the same help request more than once."
				));

		sBuilder.append(getHelpTableRowHTML(
				"Response : Help"
				,

				"Automated email replied to sender with a breakdown of the automation capabilities"
				,

				"There is no key identifier for the Help response email.  Any reply to this email will be ignored"
				,

				"System sends the 'sending' email address a placeholder marker email.  In this way it knows not to process the same help request more than once."
				));


		sBuilder.append(getHelpTableRowHTML(
				"Notification : Task Start"
				,

				"Automated email generated to assigned resource with details of task that starts that very day.<br>"
						+ "The body contains a table with details of the task (Name, progress, start, end etc)"
						,

						"Three key tags in the body at the end of the email are key for automatically handling reply:"
								+ "<ul>"
								+ "<li>{Project " + Repository.getInstance().getProject().getName() + "}"
								+ "<li>{Task Id (id number of task)}"
								+ "<li>{Reserved Token for " + Repository.getInstance().getProject().getName() + "}"
								+ "</ul>"
								+ "These three tags must be included in any reply<br>"
								+ "This ensures that any progress update is applied to the correct project and task"
								,

								"This is an automated email that gets sent to each resource<b>"
										+ "System updates progress based on reply to this email"
				));

		sBuilder.append(getHelpTableRowHTML(
				"Notification : Follow Up Task"
				,

				"Automated email generated to assigned resource with details of task that have already started but there's no progress"
						+ "Just like 'Notification : Task Start', the body contains a table with details of the task<br>(Name, progress, start, end etc)<br>"
						+ "For this project, follow Up notification is sent at following configured intervals if progress is 0<br>"
						+ UserConfig.getInstance().getNotify().getNotifications()
						,

						"Exactly the same as 'Notification : Task Start' above"
						,

						"Exactly the same as 'Notification : Task Start' above"
				));


		sBuilder.append(getHelpTableRowHTML(
				"Reply : Task Update"
				,

				"A user email in reply to either 'Notification : Task Start' or 'Notification : Follow Up Task' notification email." 
						+ "<br>The body of this email gets read and interpreted to understand what to set the completion to for the task."
						+ "<br>By simply replying to the task notification, the original notification text should (and MUST) be included in the reply."
						+ "<br>That ensures that the key signature gets included which can correctly identify the project and the task."
						,

						"Three key tags in at the end of the email are key for automatically handling reply:"
								+ "<ul>"
								+ "<li>{Project " + Repository.getInstance().getProject().getName() + "}"
								+ "<li>{Task Id (id number of task)}"
								+ "<li>{Reserved Token for " + Repository.getInstance().getProject().getName() + "}"
								+ "</ul>"
								+ "These three tags must be included in this reply<br>"
								+ "This ensures that any progress update is applied to the correct project and task"
								,

								"An Acknowledgement notification is sent in response to the reply"
				));

		sBuilder.append(getHelpTableRowHTML(
				"Notification : Task Update Acknowledgement"
				,

				"Automated email generated after handling a 'Reply : Task Update' message.<br>"
						+ "Note that the system sends the acknowledgement to the person who updated the task and also Cc's any other resource associated with the task too"
						,

						"Exactly the same as 'Notification : Task Start' above"
						,

						"There is no response"
				));


		sBuilder.append(getHelpTableRowHTML(
				"Notification : Project Summary"
				,

				"Automated email generated for the Project Manager (" 
						+ UserConfig.getInstance().getSummarise().getProjectManager()
						+ ")<br>which lists tasks in progress, underway and due to start"
						,

						"There are no particular key identifiers for this message<br>Any replies will not be handled automatically"
						,

						"Any replies will not be handled automatically"
				));

		sBuilder.append(getHelpTableRowHTML(
				"Request : Reminder"
				,

				"Automated email generated to assigned resource with<br>details of task that have already started but there's no progress"
						+ "Just like Task Notification, the body contains a table with details of the task<br>(Name, progress, start, end etc)"
						,

						"Two key tags at the end of the email are key for automatically handling reply:"

								+ "<ul>"
								+ "<li>{Project " + Repository.getInstance().getProject().getName() + "}"
								+ "<li>{Reserved Token for " + Repository.getInstance().getProject().getName() + "}"
								+ "</ul>"

								+ "These two tags must be included in reminder request<br>"
								+ "This ensures a reminder is sent for the correct project"
								,

								"A 'Notification : Project Reminder' gets sent back to the sender"
				));


		sBuilder.append(getHelpTableRowHTML(
				"Response : Project Reminder"
				,

				"Automated email generated in response to the 'Request : Reminder' email from a resource." 
						+ "<br>Like the 'Notification : Project Summary', it also lists tasks in progress, underway and due to start"
						+ "<br>but only those associated with the sender of the reminder request"
						,

						"There are no particular key identifiers for this message<br>Any replies will not be handled automatically"
						,

						"Any replies will not be handled automatically"
				));

		sBuilder.append(getMonitorTableRow("Help"));
		sBuilder.append(getMonitorTableRow("Update"));
		sBuilder.append(getMonitorTableRow("Remind"));
		sBuilder.append(getMonitorTableRow("Notify"));
		sBuilder.append(getMonitorTableRow("Summarise"));


		return sBuilder.toString();
	}


	protected String getHelpTableRowHTML(String messageType, String description, String keyIdentifier, String response)
	{
		StringBuilder sBuilder = new StringBuilder();

		sBuilder.append(""				

				+ " <tr style='mso-yfti-irow:0;mso-yfti-lastrow:yes'>\r\n"
				//				+ "  <td width=125 style='width:93.5pt;border:solid #95B3D7 1.0pt;mso-border-themecolor:\r\n"
				+ "  <td width=125 style='width:7.0cm;border:solid #95B3D7 1.0pt;mso-border-themecolor:\r\n"
				+ "  accent1;mso-border-themetint:153;border-top:none;mso-border-top-alt:solid #95B3D7 .5pt;\r\n"
				+ "  mso-border-top-themecolor:accent1;mso-border-top-themetint:153;mso-border-alt:\r\n"
				+ "  solid #95B3D7 .5pt;mso-border-themecolor:accent1;mso-border-themetint:153;\r\n"
				+ "  background:#DBE5F1;mso-background-themecolor:accent1;mso-background-themetint:\r\n"
				+ "  51;padding:0cm 5.4pt 0cm 5.4pt'>\r\n"
				+ "  <p class=MsoNormal align=center style='mso-yfti-cnfc:68'><b><span style='color:black;\r\n"
				+ "  mso-color-alt:windowtext'>" + messageType + "</span><o:p></o:p></b></p>\r\n"
				+ "  </td>\r\n"

				+ "  <td width=125 style='width:7.0cm;border-top:none;border-left:none;\r\n"
				+ "  border-bottom:solid #95B3D7 1.0pt;mso-border-bottom-themecolor:accent1;\r\n"
				+ "  mso-border-bottom-themetint:153;border-right:solid #95B3D7 1.0pt;mso-border-right-themecolor:\r\n"
				+ "  accent1;mso-border-right-themetint:153;mso-border-top-alt:solid #95B3D7 .5pt;\r\n"
				+ "  mso-border-top-themecolor:accent1;mso-border-top-themetint:153;mso-border-left-alt:\r\n"
				+ "  solid #95B3D7 .5pt;mso-border-left-themecolor:accent1;mso-border-left-themetint:\r\n"
				+ "  153;mso-border-alt:solid #95B3D7 .5pt;mso-border-themecolor:accent1;\r\n"
				+ "  mso-border-themetint:153;background:#DBE5F1;mso-background-themecolor:accent1;\r\n"
				+ "  mso-background-themetint:51;padding:0cm 5.4pt 0cm 5.4pt'>\r\n"
				+ "  <p class=MsoNormal style='mso-yfti-cnfc:64'><span style='color:black;\r\n"
				+ "  mso-color-alt:windowtext'>" + description + "</span><o:p></o:p></p>\r\n"
				+ "  </td>\r\n"

				+ "  <td width=125 style='width:7.0cm;border-top:none;border-left:none;\r\n"
				+ "  border-bottom:solid #95B3D7 1.0pt;mso-border-bottom-themecolor:accent1;\r\n"
				+ "  mso-border-bottom-themetint:153;border-right:solid #95B3D7 1.0pt;mso-border-right-themecolor:\r\n"
				+ "  accent1;mso-border-right-themetint:153;mso-border-top-alt:solid #95B3D7 .5pt;\r\n"
				+ "  mso-border-top-themecolor:accent1;mso-border-top-themetint:153;mso-border-left-alt:\r\n"
				+ "  solid #95B3D7 .5pt;mso-border-left-themecolor:accent1;mso-border-left-themetint:\r\n"
				+ "  153;mso-border-alt:solid #95B3D7 .5pt;mso-border-themecolor:accent1;\r\n"
				+ "  mso-border-themetint:153;background:#DBE5F1;mso-background-themecolor:accent1;\r\n"
				+ "  mso-background-themetint:51;padding:0cm 5.4pt 0cm 5.4pt'>\r\n"
				+ "  <p class=MsoNormal style='mso-yfti-cnfc:64'><span style='color:black;\r\n"
				+ "  mso-color-alt:windowtext'>" + keyIdentifier + "</span><o:p></o:p></p>\r\n"
				+ "  </td>\r\n"		

				+ "  <td width=125 style='width:7.0cm;border-top:none;border-left:none;\r\n"
				+ "  border-bottom:solid #95B3D7 1.0pt;mso-border-bottom-themecolor:accent1;\r\n"
				+ "  mso-border-bottom-themetint:153;border-right:solid #95B3D7 1.0pt;mso-border-right-themecolor:\r\n"
				+ "  accent1;mso-border-right-themetint:153;mso-border-top-alt:solid #95B3D7 .5pt;\r\n"
				+ "  mso-border-top-themecolor:accent1;mso-border-top-themetint:153;mso-border-left-alt:\r\n"
				+ "  solid #95B3D7 .5pt;mso-border-left-themecolor:accent1;mso-border-left-themetint:\r\n"
				+ "  153;mso-border-alt:solid #95B3D7 .5pt;mso-border-themecolor:accent1;\r\n"
				+ "  mso-border-themetint:153;background:#DBE5F1;mso-background-themecolor:accent1;\r\n"
				+ "  mso-background-themetint:51;padding:0cm 5.4pt 0cm 5.4pt'>\r\n"
				+ "  <p class=MsoNormal style='mso-yfti-cnfc:64'><span style='color:black;\r\n"
				+ "  mso-color-alt:windowtext'>" + response + "</span><o:p></o:p></p>\r\n"
				+ "  </td>\r\n"

				+ " </tr>\r\n"

				);

		return sBuilder.toString();
	}


	private String getMonitorTableRow(String token)
	{
		StringBuilder sBuilder = new StringBuilder();

		sBuilder.append(getHelpTableRowHTML(
				"Monitor Tag : " + token
				,

				"Automated email generated and sent to the monitor account after processing " + token + " requests."
						+ "<br>This ensures that when the Remind mode is run again, previously processed requests are ignored"
						,

						"The following subject tokens identify this monitor email:"
								+ "<ul>"
								+ "<li>Subject : Automation Monitor Tag Email - " + token
								+ "</ul>"
								+ "The following body tokens identify this monitor email:"
								+ "<ul>"

								+ "<li>Automation Monitor Tag Email"
								+ "<li>{Automation+Email+Monitor+Tag+" + token + "}"
								+ "<li>{Automation+Email+Monitor+Tag}:" + Repository.getInstance().getProject().getName()
								+ "<li>{Project " + Repository.getInstance().getProject().getName() + "}"
								+ "<li>{Reserved Token for " + Repository.getInstance().getProject().getName() + "}"
								+ "</ul>"
								,

								"Not applicable"
				));

		return sBuilder.toString();
	}

}
