/*
Copyright 2021 David Richardson, a regular GanttProject User

This file is part of GanttProjectAutomator, a utility conceived from
years of project management experience to make task status communication
just a little bit easier.

It works specifically with files generated by GanttProject, an 
open source project management tool.

GanttProjectAutomator is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

GanttProjectAutomator is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

See <http://www.gnu.org/licenses/>.
*/
package org.richardson.david.load;

import java.io.File;

import org.richardson.david.entity.gantt.Project;
import org.richardson.david.model.Repository;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import jakarta.xml.bind.JAXBContext;
import jakarta.xml.bind.Unmarshaller;
import lombok.Getter;
import lombok.Value;

@Value
public class DataLoader
{
	private static Logger LOGGER = LoggerFactory.getLogger(DataLoader.class);
	
	private String fileNameString;
	@Getter(lazy=true) private Project project = initProject();

	public DataLoader(String fileNameString) {
		super();
		this.fileNameString = fileNameString;
		
		// Initialise the Repository
		Repository.getInstance(getProject());
	}

	private Project initProject()
	{
		Project resultProject = null;
		try {
			File file = new File(fileNameString);

			JAXBContext jaxbContext = JAXBContext.newInstance(Project.class);
			Unmarshaller unmarshaller = jaxbContext.createUnmarshaller();

			resultProject = (Project)unmarshaller.unmarshal(file);
		}
		catch (Exception e)
		{
			LOGGER.error("Unable to load XML model from file: " + fileNameString);
		}

		return resultProject;
	}

}

